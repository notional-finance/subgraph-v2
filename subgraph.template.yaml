specVersion: 0.0.4
description: Notional V2 Subgraph
repository: https://github.com/notional-finance/notional
features:
  - grafting
graft:
  base: QmWQJPRtugQ6iBgKYbCXN9VeWiJGEuqwNACSBYxqhioivQ
  block: 30460000
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Governor
    network: {{networkName}}
    source:
      address: '{{ governor }}'
      abi: Governor
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.1
      language: wasm/assemblyscript
      entities:
        - Proposal
        - Vote
        - Delegate
      abis:
        - name: Governor
          file: ./abi/Governor.json
      eventHandlers:
        # TODO: need to update threshold, blocks, minDelay etc
        - event: ProposalCreated(indexed uint256,indexed address,address[],uint256[],bytes[],uint256,uint256)
          handler: handleProposalCreated
        - event: VoteCast(indexed address,indexed uint256,bool,uint256)
          handler: handleVoteCast
        - event: ProposalCanceled(indexed uint256)
          handler: handleProposalCanceled
        - event: ProposalQueued(indexed uint256,uint256)
          handler: handleProposalQueued
        - event: ProposalExecuted(indexed uint256)
          handler: handleProposalExecuted
      file: ./src/governor.ts
  - kind: ethereum/contract
    name: NoteERC20
    network: {{networkName}}
    source:
      address: '{{ note }}'
      abi: NoteERC20
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.1
      language: wasm/assemblyscript
      entities:
        - Delegate
      abis:
        - name: NoteERC20
          file: ./abi/NoteERC20.json
      eventHandlers:
        - event: DelegateChanged(indexed address,indexed address,indexed address)
          handler: handleDelegateChanged
        - event: DelegateVotesChanged(indexed address,uint256,uint256)
          handler: handleDelegateVotesChanged
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/noteERC20.ts
  - kind: ethereum/contract
    name: Notional
    network: {{networkName}}
    source:
      address: '{{ notional }}'
      abi: Notional
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.1
      language: wasm/assemblyscript
      entities:
        - Currency
        - ETHExchangeRate
        - AssetExchangeRate
        - CashGroup
        - nToken
        - TransferOperator
      abis:
        - name: Notional
          file: ./abi/Notional.json
        - name: ERC20
          file: ./abi/ERC20.json
      blockHandlers:
        - handler: handleBlockUpdates
      eventHandlers:
        # Governance Events
        - event: ListCurrency(uint16)
          handler: handleListCurrency
        - event: UpdateETHRate(uint16)
          handler: handleUpdateETHRate
        - event: UpdateAssetRate(uint16)
          handler: handleUpdateAssetRate
        - event: UpdateCashGroup(uint16)
          handler: handleUpdateCashGroup
        - event: DeployNToken(uint16,address)
          handler: handleDeployNToken
        - event: UpdateDepositParameters(uint16)
          handler: handleUpdateDepositParameters
        - event: UpdateInitializationParameters(uint16)
          handler: handleUpdateInitializationParameters
        - event: UpdateIncentiveEmissionRate(uint16,uint32)
          handler: handleUpdateIncentiveEmissionRate
        - event: UpdateTokenCollateralParameters(uint16)
          handler: handleUpdateTokenCollateralParameters
        - event: UpdateGlobalTransferOperator(address,bool)
          handler: handleUpdateGlobalTransferOperator
        - event: UpdateAuthorizedCallbackContract(address,bool)
          handler: handleUpdateAuthorizedCallbackContract
        - event: UpdateMaxCollateralBalance(uint16,uint72)
          handler: handleUpdateMaxCollateralBalance
        - event: SetSettlementRate(indexed uint256,indexed uint256,uint128)
          handler: handleSetSettlementRate
        - event: MarketsInitialized(uint16)
          handler: handleMarketsInitialized
        - event: SweepCashIntoMarkets(uint16,int256)
          handler: handleSweepCashIntoMarkets
        - event: UpdateSecondaryIncentiveRewarder(indexed uint16,address)
          handler: handleUpdateSecondaryIncentiveRewarder
        # These two events update the whole account
        - event: AccountContextUpdate(indexed address)
          handler: handleAccountContextUpdate
        - event: AccountSettled(indexed address)
          handler: handleAccountSettled
        # Does account update for nToken
        - event: nTokenSupplyChange(indexed address,indexed uint16,int256)
          handler: handleNTokenSupplyChange
        # Updates markets and emits trade events
        - event: LendBorrowTrade(indexed address,indexed uint16,uint40,int256,int256)
          handler: handleLendBorrowTrade
        - event: AddRemoveLiquidity(indexed address,indexed uint16,uint40,int256,int256,int256)
          handler: handleAddRemoveLiquidity
        - event: SettledCashDebt(indexed address,indexed uint16,indexed address,int256,int256)
          handler: handleSettledCashDebt
        - event: nTokenResidualPurchase(indexed uint16,indexed uint40,indexed address,int256,int256)
          handler: handleNTokenResidualPurchase
        # fCash Transfers: only need to mark Trade events
        # - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
        #   handler: handleERC115Transfer
        # - event: TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
        #   handler: handleERC115BatchTransfer
        - event: LiquidateLocalCurrency(indexed address,indexed address,uint16,int256)
          handler: handleLiquidateLocalCurrency
        - event: LiquidateCollateralCurrency(indexed address,indexed address,uint16,uint16,int256,int256,int256)
          handler: handleLiquidateCollateralCurrency
        - event: LiquidatefCashEvent(indexed address,indexed address,uint16,uint16,int256,uint256[],int256[])
          handler: handleLiquidatefCash
        - event: IncentivesMigrated(uint16,uint256,uint256,uint256)
          handler: handleIncentivesMigrated
        # Reserve balances
        - event: ReserveBalanceUpdated(indexed uint16,int256)
          handler: handleReserveBalanceUpdated
        - event: ExcessReserveBalanceHarvested(indexed uint16,int256)
          handler: handleExcessReserveBalanceHarvested
        - event: TreasuryManagerChanged(indexed address,indexed address)
          handler: handleTreasuryManagerChanged
        - event: ReserveBufferUpdated(uint16,uint256)
          handler: handleReserveBufferUpdated
      file: ./src/notional.ts
